//Carissa Ainsworth
//Mini Project 1
//9/5/2021

#include <iostream>
#include <string>

using namespace std;

class Moveclass
{
    private:
        static const int ROWS = 8;
        static const int COLS = 8;
    public:
        void legalMoves (string [][COLS], int, int);
};

int main()
{
    string board[8][8];
    int userow, usecol; //user imput 
    int row, col;

    cout << "Your current position on the board (input first row, then column): \n";
    cin >> userow >> usecol;

    row= userow - 1;
    col= usecol - 1;

    Moveclass move1;
    move1.legalMoves(board, row, col);

    return 0;
}

void Moveclass::legalMoves(string arr[][COLS], int currentRow, int currentCol)
{
    //Initialize array with empty spaces 
    for (int r = 0; r <ROWS; r++)
    {
        for (int c = 0; c < COLS; c++)
        {
            arr[r][c] = "[ ]";
        
        }
    }

    cout << "\nYour current position on the board is [" << currentRow +1 << "] [" <<currentCol +1 << "] \n";
    arr [currentRow][currentCol] = "[X]";

    //Show the current position on the board
    cout << "  1  2  3  4  5  6  7  8\n";
    for (int r = 0; r < ROWS; r++)
    {
        cout << r+1;
        for (int c = 0; c < COLS; c++)
        {
            cout << arr[r][c];
        }
        cout << endl;
    }

    int row, col;
    cout << "\nFor this position legal moves are:\n"; 

    //to move up
    row = currentRow -2; col = currentCol +1;
    if (row >=0 && row < 8 && col>=0 && col < 8)
    {
        cout << "board[" << row+1 << "][" << col+1 << "] or \n";
        arr[row][col] ="[L]";
    }

    row = currentRow - 1; col = currentCol + 2;
    if (row >= 0 && row < 8 && col >=0 && col < 8)
    {
        cout << "board[" << row+1 << "][" << col+1 << "] or \n";
        arr[row][col] = "[L]";
    }

    //to move right
    row = currentRow + 1; col = currentCol + 2;
    if (row >= 0 && row < 8 && col >= 0 && col < 8)
    {
        cout << "board[" << row+1 << "][" << col+1 << "] or \n";
        arr[row][col] = "[L]";
    }
    row = currentRow + 2; col = currentCol + 1;
    if (row >= 0 && row < 8 && col >= 0 && col < 8)
    {
        cout << "board[" << row+1 << "][" << col+1 << "] or\n";
        arr [row][col] = "[L]";
    }

    //to move down 
    row = currentRow + 2; col = currentCol - 1;
    if (row >= 0 && row < 8 && col >= 0 && col < 8)
    {
        cout << "board[" << row+1 << "][" << col+1 << "] or \n";
        arr[row][col] = "[L]";
    }
    row = currentRow + 1; col = currentCol - 2;
    if (row >= 0 && row < 8 && col >= 0 && col < 8)
    {
        cout << "board[" << row+1 << "][" << col+1 << "] or \n";
        arr [row][col] = "[L]";
    }
    
    //to move left
    row = currentRow - 1; col = currentCol - 2;
    if (row >= 0 && row < 8 && col >= 0 && col < 8)
    {
        cout << "board[" << row+1 << "][" << col+1 << "] or \n";
        arr[row][col] = "[L]";
    }
    row = currentRow -2; col = currentCol - 1;
    if (row >= 0 && row < 8 && col >= 0 && col < 8)
    {
        cout << "board[" << row+1 << "][" << col+1 << "] or \n";
        arr[row][col] = "[L]";
    }

    //Show the board with all legal moves from the current position
    //Legal moves will be indicated as 'L'
    cout << "\n  1  2  3  4  5  6  7  8\n";
    for (int r = 0; r < ROWS; r++)
    {
        cout << r+1;
        for (int c = 0; c < COLS; c++)
        {
            cout <<arr[r][c];
        }
        cout <<endl;
    }
}
